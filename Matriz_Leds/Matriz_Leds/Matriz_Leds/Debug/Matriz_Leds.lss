
Matriz_Leds.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  0000023c  000002b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000023c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000328  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b23  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000077f  00000000  00000000  00000eeb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ab  00000000  00000000  0000166a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000134  00000000  00000000  00001b18  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044d  00000000  00000000  00001c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004ed  00000000  00000000  00002099  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002586  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e3       	ldi	r30, 0x3C	; 60
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 34       	cpi	r26, 0x48	; 72
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  8e:	0c 94 1c 01 	jmp	0x238	; 0x238 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <filas>:
	//MATRIZ DE LEDS CON DESPLAZAMIENTO DE UNA CADENA
	for (int i=0;i<32;i++)
	{
		filas(i,20,PORT,MENSAJE);
	}
}
  96:	0f 93       	push	r16
  98:	1f 93       	push	r17
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	ec 01       	movw	r28, r24
  a0:	00 e0       	ldi	r16, 0x00	; 0
  a2:	10 e0       	ldi	r17, 0x00	; 0
  a4:	1c c0       	rjmp	.+56     	; 0xde <filas+0x48>
  a6:	da 01       	movw	r26, r20
  a8:	ae 0f       	add	r26, r30
  aa:	bf 1f       	adc	r27, r31
  ac:	9c 91       	ld	r25, X
  ae:	9b b9       	out	0x0b, r25	; 11
  b0:	df 01       	movw	r26, r30
  b2:	ac 0f       	add	r26, r28
  b4:	bd 1f       	adc	r27, r29
  b6:	a2 0f       	add	r26, r18
  b8:	b3 1f       	adc	r27, r19
  ba:	9c 91       	ld	r25, X
  bc:	90 95       	com	r25
  be:	95 b9       	out	0x05, r25	; 5
  c0:	83 ef       	ldi	r24, 0xF3	; 243
  c2:	91 e0       	ldi	r25, 0x01	; 1
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <filas+0x2e>
  c8:	00 c0       	rjmp	.+0      	; 0xca <filas+0x34>
  ca:	00 00       	nop
  cc:	31 96       	adiw	r30, 0x01	; 1
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <filas+0x3e>
  d0:	e0 e0       	ldi	r30, 0x00	; 0
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	e8 30       	cpi	r30, 0x08	; 8
  d6:	f1 05       	cpc	r31, r1
  d8:	34 f3       	brlt	.-52     	; 0xa6 <filas+0x10>
  da:	0f 5f       	subi	r16, 0xFF	; 255
  dc:	1f 4f       	sbci	r17, 0xFF	; 255
  de:	06 17       	cp	r16, r22
  e0:	17 07       	cpc	r17, r23
  e2:	b4 f3       	brlt	.-20     	; 0xd0 <filas+0x3a>
  e4:	df 91       	pop	r29
  e6:	cf 91       	pop	r28
  e8:	1f 91       	pop	r17
  ea:	0f 91       	pop	r16
  ec:	08 95       	ret

000000ee <animacion1>:
  ee:	ef 92       	push	r14
  f0:	ff 92       	push	r15
  f2:	0f 93       	push	r16
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	8c 01       	movw	r16, r24
  fc:	7b 01       	movw	r14, r22
  fe:	c0 e0       	ldi	r28, 0x00	; 0
 100:	d0 e0       	ldi	r29, 0x00	; 0
 102:	08 c0       	rjmp	.+16     	; 0x114 <animacion1+0x26>
 104:	97 01       	movw	r18, r14
 106:	a8 01       	movw	r20, r16
 108:	6a e0       	ldi	r22, 0x0A	; 10
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	ce 01       	movw	r24, r28
 10e:	0e 94 4b 00 	call	0x96	; 0x96 <filas>
 112:	28 96       	adiw	r28, 0x08	; 8
 114:	c9 31       	cpi	r28, 0x19	; 25
 116:	d1 05       	cpc	r29, r1
 118:	ac f3       	brlt	.-22     	; 0x104 <animacion1+0x16>
 11a:	c8 e1       	ldi	r28, 0x18	; 24
 11c:	d0 e0       	ldi	r29, 0x00	; 0
 11e:	08 c0       	rjmp	.+16     	; 0x130 <animacion1+0x42>
 120:	97 01       	movw	r18, r14
 122:	a8 01       	movw	r20, r16
 124:	6a e0       	ldi	r22, 0x0A	; 10
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	ce 01       	movw	r24, r28
 12a:	0e 94 4b 00 	call	0x96	; 0x96 <filas>
 12e:	28 97       	sbiw	r28, 0x08	; 8
 130:	dd 23       	and	r29, r29
 132:	b4 f7       	brge	.-20     	; 0x120 <animacion1+0x32>
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	1f 91       	pop	r17
 13a:	0f 91       	pop	r16
 13c:	ff 90       	pop	r15
 13e:	ef 90       	pop	r14
 140:	08 95       	ret

00000142 <animacion2>:
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	8c 01       	movw	r16, r24
 150:	7b 01       	movw	r14, r22
 152:	c0 e0       	ldi	r28, 0x00	; 0
 154:	d0 e0       	ldi	r29, 0x00	; 0
 156:	08 c0       	rjmp	.+16     	; 0x168 <animacion2+0x26>
 158:	97 01       	movw	r18, r14
 15a:	a8 01       	movw	r20, r16
 15c:	64 e6       	ldi	r22, 0x64	; 100
 15e:	70 e0       	ldi	r23, 0x00	; 0
 160:	ce 01       	movw	r24, r28
 162:	0e 94 4b 00 	call	0x96	; 0x96 <filas>
 166:	28 96       	adiw	r28, 0x08	; 8
 168:	c9 31       	cpi	r28, 0x19	; 25
 16a:	d1 05       	cpc	r29, r1
 16c:	ac f3       	brlt	.-22     	; 0x158 <animacion2+0x16>
 16e:	c8 e1       	ldi	r28, 0x18	; 24
 170:	d0 e0       	ldi	r29, 0x00	; 0
 172:	08 c0       	rjmp	.+16     	; 0x184 <animacion2+0x42>
 174:	97 01       	movw	r18, r14
 176:	a8 01       	movw	r20, r16
 178:	64 e6       	ldi	r22, 0x64	; 100
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	ce 01       	movw	r24, r28
 17e:	0e 94 4b 00 	call	0x96	; 0x96 <filas>
 182:	28 97       	sbiw	r28, 0x08	; 8
 184:	dd 23       	and	r29, r29
 186:	b4 f7       	brge	.-20     	; 0x174 <animacion2+0x32>
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	1f 91       	pop	r17
 18e:	0f 91       	pop	r16
 190:	ff 90       	pop	r15
 192:	ef 90       	pop	r14
 194:	08 95       	ret

00000196 <main>:

int main(void)
{
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	cd b7       	in	r28, 0x3d	; 61
 19c:	de b7       	in	r29, 0x3e	; 62
 19e:	c8 54       	subi	r28, 0x48	; 72
 1a0:	d1 09       	sbc	r29, r1
 1a2:	0f b6       	in	r0, 0x3f	; 63
 1a4:	f8 94       	cli
 1a6:	de bf       	out	0x3e, r29	; 62
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	cd bf       	out	0x3d, r28	; 61
	// PARA EL DATO
	DDRB = 0B11111111; // SALIDA TODO EL PUERTO B
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	84 b9       	out	0x04, r24	; 4
	
	// PARA EL DESPLAZMIENTO
	DDRD = 0B11111111; // SALIDAS TODO EL PUERTO D
 1b0:	8a b9       	out	0x0a, r24	; 10
	
	// PARA LAS BOTONERAS
	DDRC |= (0<<0)|(0<<1)|(0<<2); //ENTRADAS PARA LOS PUERTOS C0,C1,C2
 1b2:	87 b1       	in	r24, 0x07	; 7
 1b4:	87 b9       	out	0x07, r24	; 7
		
	//UART_init();
	
	// VA CON EL DESPLAZMIENTO
	char PORT[8] =  {1,2,4,8,16,32,64,128};//VALORES DE PINES DEL PORTD
 1b6:	88 e0       	ldi	r24, 0x08	; 8
 1b8:	e0 e0       	ldi	r30, 0x00	; 0
 1ba:	f1 e0       	ldi	r31, 0x01	; 1
 1bc:	de 01       	movw	r26, r28
 1be:	11 96       	adiw	r26, 0x01	; 1
 1c0:	01 90       	ld	r0, Z+
 1c2:	0d 92       	st	X+, r0
 1c4:	8a 95       	dec	r24
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x2a>
		0x0, 0x7e, 0x7e, 0x66, 0x66, 0x7e, 0x7e, 0x0, //O
		0x0, 0x7e, 0x7e, 0x60, 0x60, 0x60, 0x60, 0x0, //L
		0x0, 0x7e, 0x7e, 0x16, 0x16, 0x7e, 0x7e, 0x0, //A
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}; //ESPACIO*/
	
	char ANIMACION1[] = {
 1c8:	80 e2       	ldi	r24, 0x20	; 32
 1ca:	e8 e0       	ldi	r30, 0x08	; 8
 1cc:	f1 e0       	ldi	r31, 0x01	; 1
 1ce:	de 01       	movw	r26, r28
 1d0:	19 96       	adiw	r26, 0x09	; 9
 1d2:	01 90       	ld	r0, Z+
 1d4:	0d 92       	st	X+, r0
 1d6:	8a 95       	dec	r24
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <main+0x3c>
		0x0, 0x0, 0x24, 0x0, 0x0, 0x24, 0x0, 0x0, // CENTRO 2
		0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x42, 0x0, // CENTRO 3
		0x81, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x81 // CENTRO 4
	};
	
	char ANIMACION2[] = {
 1da:	80 e2       	ldi	r24, 0x20	; 32
 1dc:	e8 e2       	ldi	r30, 0x28	; 40
 1de:	f1 e0       	ldi	r31, 0x01	; 1
 1e0:	de 01       	movw	r26, r28
 1e2:	99 96       	adiw	r26, 0x29	; 41
 1e4:	01 90       	ld	r0, Z+
 1e6:	0d 92       	st	X+, r0
 1e8:	8a 95       	dec	r24
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <main+0x4e>
		0x0, 0x0, 0x3C, 0x24, 0x24, 0x3C, 0x0, 0x0, // CENTRO 2
		0x0, 0x7E, 0x42, 0x42, 0x42, 0x42, 0x7E, 0x0, // CENTRO 3
		0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF // CENTRO 4
	};
	
	int inicio = 0;
 1ec:	00 e0       	ldi	r16, 0x00	; 0
 1ee:	10 e0       	ldi	r17, 0x00	; 0
 1f0:	18 c0       	rjmp	.+48     	; 0x222 <main+0x8c>
	
	while(1){
		
		while (!inicio) {
			
			animacion2(PORT,ANIMACION2);
 1f2:	be 01       	movw	r22, r28
 1f4:	67 5d       	subi	r22, 0xD7	; 215
 1f6:	7f 4f       	sbci	r23, 0xFF	; 255
 1f8:	ce 01       	movw	r24, r28
 1fa:	01 96       	adiw	r24, 0x01	; 1
 1fc:	0e 94 a1 00 	call	0x142	; 0x142 <animacion2>
			// EMPIEZA EL JUEGO CON START/NEXT 0B 0100 0001
			if (PINC == 0x41) {
 200:	86 b1       	in	r24, 0x06	; 6
 202:	81 34       	cpi	r24, 0x41	; 65
 204:	71 f4       	brne	.+28     	; 0x222 <main+0x8c>
 206:	07 c0       	rjmp	.+14     	; 0x216 <main+0x80>
				while (PINC == 0x41){
					animacion1(PORT,ANIMACION1);
 208:	be 01       	movw	r22, r28
 20a:	67 5f       	subi	r22, 0xF7	; 247
 20c:	7f 4f       	sbci	r23, 0xFF	; 255
 20e:	ce 01       	movw	r24, r28
 210:	01 96       	adiw	r24, 0x01	; 1
 212:	0e 94 77 00 	call	0xee	; 0xee <animacion1>
		while (!inicio) {
			
			animacion2(PORT,ANIMACION2);
			// EMPIEZA EL JUEGO CON START/NEXT 0B 0100 0001
			if (PINC == 0x41) {
				while (PINC == 0x41){
 216:	86 b1       	in	r24, 0x06	; 6
 218:	81 34       	cpi	r24, 0x41	; 65
 21a:	b1 f3       	breq	.-20     	; 0x208 <main+0x72>
					animacion1(PORT,ANIMACION1);
				}
				inicio = 1;
 21c:	01 e0       	ldi	r16, 0x01	; 1
 21e:	10 e0       	ldi	r17, 0x00	; 0
 220:	03 c0       	rjmp	.+6      	; 0x228 <main+0x92>
	
	int inicio = 0;
	
	while(1){
		
		while (!inicio) {
 222:	01 15       	cp	r16, r1
 224:	11 05       	cpc	r17, r1
 226:	29 f3       	breq	.-54     	; 0x1f2 <main+0x5c>
				inicio = 1;
				break;
			}
		}
		
		animacion2(PORT,ANIMACION2);
 228:	be 01       	movw	r22, r28
 22a:	67 5d       	subi	r22, 0xD7	; 215
 22c:	7f 4f       	sbci	r23, 0xFF	; 255
 22e:	ce 01       	movw	r24, r28
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	0e 94 a1 00 	call	0x142	; 0x142 <animacion2>
			
			while (PIND == 0x6){
			}	
		}*/
		
	}
 236:	f5 cf       	rjmp	.-22     	; 0x222 <main+0x8c>

00000238 <_exit>:
 238:	f8 94       	cli

0000023a <__stop_program>:
 23a:	ff cf       	rjmp	.-2      	; 0x23a <__stop_program>
